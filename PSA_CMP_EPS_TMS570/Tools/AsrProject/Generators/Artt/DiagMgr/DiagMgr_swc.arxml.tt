<?xml version="1.0" encoding="UTF-8"?>
<AUTOSAR xsi:schemaLocation="http://autosar.org/3.2.1 autosar_321.xsd" xmlns="http://autosar.org/3.2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<#@ AutosarXml processor="ArDirectiveProcessor" requires="arPrefix='ar';arNamespace='http://autosar.org/2.1.2'" #>
<#@ template inherits="AutosarDirectiveProcessor.ArGtcBase" debug="false" #>
<#@ output extension="" #>
<#@ include file="Helper.tt" #>
<#
	ChangeContext( Xp.ModuleConfAtDefRefTo( "DiagMgr" ) );
	bool isMtoProgram = ValueOf( Xp.ValueAtDefRefTo( "DiagMgrGeneral/DiagMgrIsMtoProgram" ) );
	string diagMgrFailActionApp = LastValueSegmentOf( Xp.ValueRefAtDefRefTo( "DiagMgrGeneral/DiagMgrFailActionOsAppRef" ));
	string diagMgrDemIfApp = LastValueSegmentOf( Xp.ValueRefAtDefRefTo( "DiagMgrGeneral/DiagMgrDemIfOsAppRef" ));
	float diagMgrFailPeriod = ValueOf( Xp.ValueAtDefRefTo( "DiagMgrGeneral/DiagMgrFailPeriod" ));
	float diagMgrRecoverPeriod = ValueOf( Xp.ValueAtDefRefTo( "DiagMgrGeneral/DiagMgrRecoverPeriod" ));
	float diagMgrDemIfPeriod = ValueOf( Xp.ValueAtDefRefTo( "DiagMgrGeneral/DiagMgrDemIfPeriod" ));
	int i;
	List<string> cpList = new List<string>();
#>
<#	!LOOP( Xp.ValueAtDefRefTo( "DiagMgrGeneral/DiagMgrCPEnable" ) ) #>
<#	cpList.Add(ValueOf( "." ));#>
<#	!ENDLOOP#>
<#	
	ChangeContext( Xp.ModuleConfAtDefRefTo( "Os" ) ); 
#>
<TOP-LEVEL-PACKAGES>
<# !LOOP( Xp.ContainerAtDefRefTo( "OsApplication" ) ) #>
<#  string osApp = ValueOf( "ar:SHORT-NAME" );

	/* Assume the Application short name is the last "word" in the Os Application name delimited with '_' */
	string[] osAppWords = osApp.Split('_');
	string osAppSuffix = osAppWords[osAppWords.Length -1];
	int eventId = 0;
#>
<# ChangeContext( Xp.ModuleConfAtDefRefTo( "DiagMgr" ) ); 
#>
<# !LOOP( Xp.ContainerAtDefRefTo( "DiagMgrConfigSet/DiagMgrEventParameter" ) ) #>
<#
	string eventApp = LastValueSegmentOf( Xp.ValueRefAtDefRefTo( "OsApplicationRef" ));
	if ( eventApp == osApp ) { 
		eventId++;
	} 
#>
<# !ENDLOOP #>
<#if ( 0 != eventId ) { #>
	<AR-PACKAGE>
			<SHORT-NAME>ComponentType</SHORT-NAME>
			<ELEMENTS>
				<APPLICATION-SOFTWARE-COMPONENT-TYPE>
					<SHORT-NAME>Ap_DiagMgr<#=osAppSuffix#></SHORT-NAME>
					<PORTS>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>NxtrDiagMgr<#=osAppSuffix#></SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/NxtrDiagMgr/GetNTCFailed</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/NxtrDiagMgr/GetNTCActive</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/NxtrDiagMgr/GetNTCStatus</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/NxtrDiagMgr/SetNTCStatus</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/PortInterface/NxtrDiagMgr</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
<# if (isMtoProgram == true) { #>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>DiffPres</SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<UNQUEUED-RECEIVER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/Pres_bar_f32/bar_f32</DATA-ELEMENT-REF>
									<FILTER>
										<ALWAYS></ALWAYS>
									</FILTER>
									<ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
									<HANDLE-INVALID>DONT-INVALIDATE</HANDLE-INVALID>
									<INIT-VALUE-REF DEST="REAL-LITERAL">/Constant/D_ZERO_ULS_F32/D_ZERO_ULS_F32</INIT-VALUE-REF>
								</UNQUEUED-RECEIVER-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/Pres_bar_f32</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>CoilCurCmd</SHORT-NAME>
							<ADMIN-DATA>
								<SDGS/>
							</ADMIN-DATA>
							<REQUIRED-COM-SPECS>
								<UNQUEUED-RECEIVER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/Current_Amp_f32/Amp_f32</DATA-ELEMENT-REF>
									<FILTER>
										<ALWAYS></ALWAYS>
									</FILTER>
									<ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
									<INIT-VALUE-REF DEST="REAL-LITERAL">/Constant/D_ZERO_ULS_F32/D_ZERO_ULS_F32</INIT-VALUE-REF>
								</UNQUEUED-RECEIVER-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/Current_Amp_f32</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
<# } else { #>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>HwTrq</SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<UNQUEUED-RECEIVER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/HwTrq_HwNm_f32/HwNm_f32</DATA-ELEMENT-REF>
									<FILTER>
										<ALWAYS></ALWAYS>
									</FILTER>
									<ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
									<HANDLE-INVALID>DONT-INVALIDATE</HANDLE-INVALID>
									<INIT-VALUE-REF DEST="REAL-LITERAL">/Constant/D_ZERO_ULS_F32/D_ZERO_ULS_F32</INIT-VALUE-REF>
								</UNQUEUED-RECEIVER-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/HwTrq_HwNm_f32</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>MtrTrq</SHORT-NAME>
							<ADMIN-DATA>
								<SDGS/>
							</ADMIN-DATA>
							<REQUIRED-COM-SPECS>
								<UNQUEUED-RECEIVER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/MtrTrq_MtrNm_f32/MtrNm_f32</DATA-ELEMENT-REF>
									<FILTER>
										<ALWAYS></ALWAYS>
									</FILTER>
									<ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
									<INIT-VALUE-REF DEST="REAL-LITERAL">/Constant/D_ZERO_ULS_F32/D_ZERO_ULS_F32</INIT-VALUE-REF>
								</UNQUEUED-RECEIVER-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/MtrTrq_MtrNm_f32</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
<# } #>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>SystemState</SHORT-NAME>
							<REQUIRED-COM-SPECS></REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/SystemState</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>VehSpd</SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<UNQUEUED-RECEIVER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/VehSpd_Kph_f32/Kph_f32</DATA-ELEMENT-REF>
									<FILTER>
										<ALWAYS></ALWAYS>
									</FILTER>
									<ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
									<HANDLE-INVALID>DONT-INVALIDATE</HANDLE-INVALID>
									<INIT-VALUE-REF DEST="REAL-LITERAL">/Constant/D_ZERO_ULS_F32/D_ZERO_ULS_F32</INIT-VALUE-REF>
								</UNQUEUED-RECEIVER-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/VehSpd_Kph_f32</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>IgnCnt</SHORT-NAME>
							<ADMIN-DATA>
								<SDGS/>
							</ADMIN-DATA>
							<REQUIRED-COM-SPECS>
								<UNQUEUED-RECEIVER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/IgnCnt_Cnt_u16/Cnt_u16</DATA-ELEMENT-REF>
									<FILTER>
										<ALWAYS></ALWAYS>
									</FILTER>
									<ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
									<INIT-VALUE-REF DEST="REAL-LITERAL">/Constant/D_ZERO_CNT_U16/D_ZERO_CNT_U16</INIT-VALUE-REF>
								</UNQUEUED-RECEIVER-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/IgnCnt_Cnt_u16</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>MEC</SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<UNQUEUED-RECEIVER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/ManufModes_Cnt_enum/Cnt_enum</DATA-ELEMENT-REF>
									<FILTER>
										<ALWAYS></ALWAYS>
									</FILTER>
									<ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
									<HANDLE-INVALID>DONT-INVALIDATE</HANDLE-INVALID>
									<INIT-VALUE-REF DEST="INTEGER-LITERAL">/Constant/D_MANUFMODEINIT_CNT_ENUM/D_MANUFMODEINIT_CNT_ENUM</INIT-VALUE-REF>
								</UNQUEUED-RECEIVER-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/ManufModes_Cnt_enum</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>MfgDiagInhibit</SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<UNQUEUED-RECEIVER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/Enable_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<FILTER>
										<ALWAYS></ALWAYS>
									</FILTER>
									<ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
									<HANDLE-INVALID>DONT-INVALIDATE</HANDLE-INVALID>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-RECEIVER-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/Enable_Cnt_lgc</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
<#	i = 0; 
	while(i < cpList.Count)
	{
		if (cpList[i].Split('_')[0] == "DiagMgr"+osAppSuffix)
		{
#>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME><#=cpList[i]#></SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<CLIENT-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/WdgM_CheckpointReached/CheckpointReached</OPERATION-REF>
								</CLIENT-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/PortInterface/WdgM_CheckpointReached</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>		
<#		}
	i++;
	}
#>
<#if(diagMgrDemIfApp == osApp){#>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>DemIf</SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<CLIENT-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/DemShutdown</OPERATION-REF>
								</CLIENT-COM-SPEC>
								<CLIENT-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/RestartDem</OPERATION-REF>
								</CLIENT-COM-SPEC>
								<CLIENT-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/SetEventStatus</OPERATION-REF>
								</CLIENT-COM-SPEC>
								<CLIENT-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/SetOperationCycleState</OPERATION-REF>
								</CLIENT-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/PortInterface/DemIf</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
<#	i = 0; 
	while(i < cpList.Count)
	{
		if ((cpList[i].Split('_')[0] == "DiagMgr") & (cpList[i].Split('_')[1] == "Per2"))
		{
#>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME><#=cpList[i]#></SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<CLIENT-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/WdgM_CheckpointReached/CheckpointReached</OPERATION-REF>
								</CLIENT-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/PortInterface/WdgM_CheckpointReached</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>		
<#		}
	i++;
	}
#>
<#}#>
<#if(diagMgrFailActionApp == osApp){#>	
<#	i = 0; 
	while(i < cpList.Count)
	{
		if ((cpList[i].Split('_')[0] == "DiagMgr") & (cpList[i].Split('_')[1] == "Per1"))
		{
#>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME><#=cpList[i]#></SHORT-NAME>
							<REQUIRED-COM-SPECS>
								<CLIENT-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/WdgM_CheckpointReached/CheckpointReached</OPERATION-REF>
								</CLIENT-COM-SPEC>
							</REQUIRED-COM-SPECS>
							<REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/PortInterface/WdgM_CheckpointReached</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>		
<#		}
	i++;
	}
#>
<#}#>
<#if(diagMgrDemIfApp == osApp){#>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagMgr_StaCtrl</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DiagMgr_StaCtrl/Shutdown</OPERATION-REF>
								</SERVER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/PortInterface/DiagMgr_StaCtrl</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagMgr_SCom</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/GetNTCInfo</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/ReadStrgArray</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/ResetNTCStatus</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/ClearBlackBox</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
								<SERVER-COM-SPEC>
									<OPERATION-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/ClearLatchCounters</OPERATION-REF>
									<QUEUE-LENGTH>1</QUEUE-LENGTH>
								</SERVER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/PortInterface/SCom_NxtrDiagMgr</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
<#}
if(diagMgrFailActionApp == osApp){#>						
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagRampRate</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/RampRate_XpmS_f32/XpmS_f32</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="REAL-LITERAL">/Constant/D_ZERO_ULS_F32/D_ZERO_ULS_F32</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/RampRate_XpmS_f32</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagRampValue</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/UnityScalar_Uls_f32/Uls_f32</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="REAL-LITERAL">/Constant/D_ZERO_ULS_F32/D_ZERO_ULS_F32</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/UnityScalar_Uls_f32</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagRmpToZeroActive</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsCtrldDisRmpPres</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsDefTemp</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsDefVehSpd</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsHWASbSystmFltPres</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsNonRecRmpToZeroFltPres</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsRecRmpToZeroFltPres</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsScomHWANotValid</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsWIRDisable</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsInverter1Inactive</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE><P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagStsInverter2Inactive</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_FALSE_CNT_LGC/D_FALSE_CNT_LGC</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/BoolStatusFlag_Cnt_lgc</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE><P-PORT-PROTOTYPE>
							<SHORT-NAME>DiagNoofActiveInverter</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<UNQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/Count_Cnt_u08/Cnt_u08</DATA-ELEMENT-REF>
									<CAN-INVALIDATE>false</CAN-INVALIDATE>
									<INIT-VALUE-REF DEST="BOOLEAN-LITERAL">/Constant/D_TWO_CNT_U08/D_TWO_CNT_U08</INIT-VALUE-REF>
								</UNQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/PortInterface/Count_Cnt_u08</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
<#}#>
					</PORTS>
				</APPLICATION-SOFTWARE-COMPONENT-TYPE>
				<INTERNAL-BEHAVIOR>
					<SHORT-NAME>Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior</SHORT-NAME>
					<COMPONENT-REF DEST="APPLICATION-SOFTWARE-COMPONENT-TYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#></COMPONENT-REF>
					<EVENTS>
						<TIMING-EVENT>
							<SHORT-NAME>DiagMgr<#=osAppSuffix#>_Init_InitEvent</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr<#=osAppSuffix#>_Init</START-ON-EVENT-REF>
							<PERIOD>0</PERIOD>
						</TIMING-EVENT>
						<TIMING-EVENT>
							<SHORT-NAME>TMT_DiagMgr<#=osAppSuffix#>_Per</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr<#=osAppSuffix#>_Per</START-ON-EVENT-REF>
							<PERIOD><#=diagMgrRecoverPeriod#></PERIOD>
						</TIMING-EVENT>	
						<MODE-SWITCH-EVENT>
							<SHORT-NAME>MST_DiagMgr<#=osAppSuffix#>_Trns_0</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr<#=osAppSuffix#>_Trns</START-ON-EVENT-REF>
							<ACTIVATION>EXIT</ACTIVATION>
							<MODE-IREF>
								<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/SystemState</R-PORT-PROTOTYPE-REF>
								<MODE-DECLARATION-GROUP-PROTOTYPE-REF DEST="MODE-DECLARATION-GROUP-PROTOTYPE">/PortInterface/SystemState/Mode</MODE-DECLARATION-GROUP-PROTOTYPE-REF>
								<MODE-DECLARATION-REF DEST="MODE-DECLARATION">/ModeDclrGroup/StaMd_Mode/OFF</MODE-DECLARATION-REF>
							</MODE-IREF>
						</MODE-SWITCH-EVENT>
<#if(diagMgrFailActionApp == osApp){#>						
						<TIMING-EVENT>
							<SHORT-NAME>TMT_DiagMgr_Per1</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_Per1</START-ON-EVENT-REF>
							<PERIOD><#=diagMgrFailPeriod#></PERIOD>
						</TIMING-EVENT>		
<#}
if(diagMgrDemIfApp == osApp){#>
						<TIMING-EVENT>
							<SHORT-NAME>DiagMgr_Init1_InitEvent</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_Init1</START-ON-EVENT-REF>
							<PERIOD>0</PERIOD>
						</TIMING-EVENT>
						<TIMING-EVENT>
							<SHORT-NAME>TMT_DiagMgr_Per2</SHORT-NAME>
							<MODE-DEPENDENCY>
								<DEPENDENT-ON-MODE-IREFS>
									<DEPENDENT-ON-MODE-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/SystemState</R-PORT-PROTOTYPE-REF>
										<MODE-DECLARATION-GROUP-PROTOTYPE-REF DEST="MODE-DECLARATION-GROUP-PROTOTYPE">/PortInterface/SystemState/Mode</MODE-DECLARATION-GROUP-PROTOTYPE-REF>
										<MODE-DECLARATION-REF DEST="MODE-DECLARATION">/ModeDclrGroup/StaMd_Mode/OFF</MODE-DECLARATION-REF>
									</DEPENDENT-ON-MODE-IREF>
								</DEPENDENT-ON-MODE-IREFS>
							</MODE-DEPENDENCY>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_Per2</START-ON-EVENT-REF>
							<PERIOD><#=diagMgrDemIfPeriod#></PERIOD>
						</TIMING-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_DiagMgr_SCom_GetNTCInfo_DiagMgr_SCom_GetInfo</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_SCom_GetNTCInfo</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagMgr_SCom</P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/GetNTCInfo</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_DiagMgr_StaCtrl_Shutdown_DiagMgr_StaCtrl_Shutdown</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_StaCtrl_Shutdown</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagMgr_StaCtrl</P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DiagMgr_StaCtrl/Shutdown</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_DiagMgr_SCom_ReadStrgArray_DiagMgr_SCom_ReadStrgArray</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_SCom_ReadStrgArray</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagMgr_SCom</P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/ReadStrgArray</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_DiagMgr_SCom_ReadStrgArray_DiagMgr_SCom_ResetNTCStatus</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_SCom_ResetNTCStatus</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagMgr_SCom</P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/ResetNTCStatus</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_DiagMgr_SCom_ReadStrgArray_DiagMgr_SCom_ClearBlackBox</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_SCom_ClearBlackBox</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagMgr_SCom</P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/ClearBlackBox</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_DiagMgr_SCom_ReadStrgArray_DiagMgr_SCom_ClearLatchCounters</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_SCom_ClearLatchCounters</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagMgr_SCom</P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/SCom_NxtrDiagMgr/ClearLatchCounters</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<MODE-SWITCH-EVENT>
							<SHORT-NAME>MST_DiagMgr_Trns1_0</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/DiagMgr_Trns1</START-ON-EVENT-REF>
							<ACTIVATION>EXIT</ACTIVATION>
							<MODE-IREF>
								<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/SystemState</R-PORT-PROTOTYPE-REF>
								<MODE-DECLARATION-GROUP-PROTOTYPE-REF DEST="MODE-DECLARATION-GROUP-PROTOTYPE">/PortInterface/SystemState/Mode</MODE-DECLARATION-GROUP-PROTOTYPE-REF>
								<MODE-DECLARATION-REF DEST="MODE-DECLARATION">/ModeDclrGroup/StaMd_Mode/OFF</MODE-DECLARATION-REF>
							</MODE-IREF>
						</MODE-SWITCH-EVENT>
<#}#>					
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_NxtrDiagMgr<#=osAppSuffix#>_GetNTCFailed_NxtrDiagMgr<#=osAppSuffix#>_GetNTCFailed</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/NxtrDiagMgr<#=osAppSuffix#>_GetNTCFailed</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/NxtrDiagMgr<#=osAppSuffix#></P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/NxtrDiagMgr/GetNTCFailed</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_NxtrDiagMgr<#=osAppSuffix#>_GetNTCActive_NxtrDiagMgr<#=osAppSuffix#>_GetNTCActive</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/NxtrDiagMgr<#=osAppSuffix#>_GetNTCActive</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/NxtrDiagMgr<#=osAppSuffix#></P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/NxtrDiagMgr/GetNTCActive</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_NxtrDiagMgr<#=osAppSuffix#>_GetNTCStatus_NxtrDiagMgr<#=osAppSuffix#>_GetNTCStatus</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/NxtrDiagMgr<#=osAppSuffix#>_GetNTCStatus</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/NxtrDiagMgr<#=osAppSuffix#></P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/NxtrDiagMgr/GetNTCStatus</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
						<OPERATION-INVOKED-EVENT>
							<SHORT-NAME>OIT_NxtrDiagMgr<#=osAppSuffix#>_SetNTCStatus_NxtrDiagMgr<#=osAppSuffix#>_SetNTCStatus</SHORT-NAME>
							<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior/NxtrDiagMgr<#=osAppSuffix#>_SetNTCStatus</START-ON-EVENT-REF>
							<OPERATION-IREF>
								<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/NxtrDiagMgr<#=osAppSuffix#></P-PORT-PROTOTYPE-REF>
								<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/NxtrDiagMgr/SetNTCStatus</OPERATION-PROTOTYPE-REF>
							</OPERATION-IREF>
						</OPERATION-INVOKED-EVENT>
					</EVENTS>
					<PORT-API-OPTIONS>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/NxtrDiagMgr<#=osAppSuffix#></PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/MEC</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/MfgDiagInhibit</PORT-REF>
						</PORT-API-OPTION>
<#if(diagMgrDemIfApp == osApp){#>						
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DemIf</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagMgr_SCom</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DemIf</PORT-REF>
						</PORT-API-OPTION>
<#}
if(diagMgrFailActionApp == osApp){#>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagRampRate</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagRampValue</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagRmpToZeroActive</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsCtrldDisRmpPres</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsDefTemp</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsDefVehSpd</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsHWASbSystmFltPres</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsNonRecRmpToZeroFltPres</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsRecRmpToZeroFltPres</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsScomHWANotValid</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsWIRDisable</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsInverter1Inactive</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsInverter2Inactive</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagNoofActiveInverter</PORT-REF>
						</PORT-API-OPTION>
						<PORT-API-OPTION>
							<ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
							<INDIRECT-API>false</INDIRECT-API>
							<PORT-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/SystemState</PORT-REF>
						</PORT-API-OPTION>
<#}#>					
					</PORT-API-OPTIONS>
					<RUNNABLES>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>NxtrDiagMgr<#=osAppSuffix#>_GetNTCFailed</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
							<SYMBOL>NxtrDiagMgr<#=osAppSuffix#>_GetNTCFailed</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>NxtrDiagMgr<#=osAppSuffix#>_GetNTCActive</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
							<SYMBOL>NxtrDiagMgr<#=osAppSuffix#>_GetNTCActive</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>NxtrDiagMgr<#=osAppSuffix#>_GetNTCStatus</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
							<SYMBOL>NxtrDiagMgr<#=osAppSuffix#>_GetNTCStatus</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>NxtrDiagMgr<#=osAppSuffix#>_SetNTCStatus</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
							<DATA-RECEIVE-POINTS>
								<DATA-RECEIVE-POINT>
									<SHORT-NAME>REC_MEC_Cnt_enum</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/MEC</R-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/ManufModes_Cnt_enum/Cnt_enum</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-RECEIVE-POINT>
								<DATA-RECEIVE-POINT>
									<SHORT-NAME>REC_MfgDiagInhibit_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/MfgDiagInhibit</R-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/Enable_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-RECEIVE-POINT>
<# if (isMtoProgram == true) { #>
								<DATA-RECEIVE-POINT>
									<SHORT-NAME>REC_Pres_bar_f32</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiffPres</R-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/Pres_bar_f32/bar_f32</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-RECEIVE-POINT>
								<DATA-RECEIVE-POINT>
									<SHORT-NAME>REC_Current_Amp_f32</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/CoilCurCmd</R-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/Current_Amp_f32/Amp_f32</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-RECEIVE-POINT>
<# } else { #>
								<DATA-RECEIVE-POINT>
									<SHORT-NAME>REC_HwTrq_HwNm_f32</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/HwTrq</R-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/HwTrq_HwNm_f32/HwNm_f32</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-RECEIVE-POINT>
								<DATA-RECEIVE-POINT>
									<SHORT-NAME>REC_MtrTrq_MtrNm_f32</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/MtrTrq</R-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/MtrTrq_MtrNm_f32/MtrNm_f32</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-RECEIVE-POINT>
<# } #>
								<DATA-RECEIVE-POINT>
									<SHORT-NAME>REC_IgnCnt_Cnt_u16</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/IgnCnt</R-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/IgnCnt_Cnt_u16/Cnt_u16</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-RECEIVE-POINT>
								<DATA-RECEIVE-POINT>
									<SHORT-NAME>REC_VehSpd_Kph_f32</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/VehSpd</R-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/VehSpd_Kph_f32/Kph_f32</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-RECEIVE-POINT>
							</DATA-RECEIVE-POINTS>							
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
							<SYMBOL>NxtrDiagMgr<#=osAppSuffix#>_SetNTCStatus</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr<#=osAppSuffix#>_Init</SHORT-NAME>
							<ADMIN-DATA>
								<SDGS>
									<SDG GID="edve:RunnableKind">
										<SD>InitRunnable</SD>
									</SDG>
								</SDGS>
							</ADMIN-DATA>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
<#if(diagMgrDemIfApp == osApp){#>
							<SERVER-CALL-POINTS>
								<SYNCHRONOUS-SERVER-CALL-POINT>
									<SHORT-NAME>SC_DemIf_SetOperationCycleState</SHORT-NAME>
									<OPERATION-IREFS>
										<OPERATION-IREF>
											<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DemIf</R-PORT-PROTOTYPE-REF>
											<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/SetOperationCycleState</OPERATION-PROTOTYPE-REF>
										</OPERATION-IREF>
									</OPERATION-IREFS>
									<TIMEOUT>0.000000000</TIMEOUT>
								</SYNCHRONOUS-SERVER-CALL-POINT>
							</SERVER-CALL-POINTS>
<#}#>							
							<SYMBOL>DiagMgr<#=osAppSuffix#>_Init</SYMBOL>
						</RUNNABLE-ENTITY>
<#if(diagMgrDemIfApp == osApp){#>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_StaCtrl_Shutdown</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
							<SERVER-CALL-POINTS>
								<SYNCHRONOUS-SERVER-CALL-POINT>
									<SHORT-NAME>SC_DemIf_DemShutdown</SHORT-NAME>
									<OPERATION-IREFS>
										<OPERATION-IREF>
											<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DemIf</R-PORT-PROTOTYPE-REF>
											<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/DemShutdown</OPERATION-PROTOTYPE-REF>
										</OPERATION-IREF>
									</OPERATION-IREFS>
									<TIMEOUT>0.000000000</TIMEOUT>
								</SYNCHRONOUS-SERVER-CALL-POINT>
							</SERVER-CALL-POINTS>
							<SYMBOL>DiagMgr_StaCtrl_Shutdown</SYMBOL>
						</RUNNABLE-ENTITY>
<#}#>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr<#=osAppSuffix#>_Per</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
<#	i = 0; 
	while(i < cpList.Count)
	{
		if ((cpList[i].Split('_')[0] == "DiagMgr"+osAppSuffix) & (cpList[i].Split('_')[1] == "Per"))
		{
#>							
							<SERVER-CALL-POINTS>
								<SYNCHRONOUS-SERVER-CALL-POINT>
									<SHORT-NAME>SC_<#=cpList[i]#>_CheckpointReached</SHORT-NAME>
									<OPERATION-IREFS>
										<OPERATION-IREF>
											<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/<#=cpList[i]#></R-PORT-PROTOTYPE-REF>
											<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/WdgM_CheckpointReached/CheckpointReached</OPERATION-PROTOTYPE-REF>
										</OPERATION-IREF>
									</OPERATION-IREFS>
									<TIMEOUT>0.000000000</TIMEOUT>
								</SYNCHRONOUS-SERVER-CALL-POINT>	
							</SERVER-CALL-POINTS>
<#		}
	i++;
	}
#>	
							<SYMBOL>DiagMgr<#=osAppSuffix#>_Per</SYMBOL>
						</RUNNABLE-ENTITY>		
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr<#=osAppSuffix#>_Trns</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
							<SYMBOL>DiagMgr<#=osAppSuffix#>_Trns</SYMBOL>
						</RUNNABLE-ENTITY>
<#if(diagMgrFailActionApp == osApp){#>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_Per1</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<DATA-SEND-POINTS>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagRampRate_XpmS_f32</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagRampRate</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/RampRate_XpmS_f32/XpmS_f32</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagRampValue_Uls_f32</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagRampValue</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/UnityScalar_Uls_f32/Uls_f32</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagRmpToZeroActive_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagRmpToZeroActive</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsCtrldDisRmpPres_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsCtrldDisRmpPres</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsDefTemp_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsDefTemp</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsDefVehSpd_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsDefVehSpd</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsHWASbSystmFltPres_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsHWASbSystmFltPres</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsNonRecRmpToZeroFltPres_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsNonRecRmpToZeroFltPres</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsRecRmpToZeroFltPres_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsRecRmpToZeroFltPres</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsScomHWANotValid_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsScomHWANotValid</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsWIRDisable_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsWIRDisable</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsInverter1Inactive_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsInverter1Inactive</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagStsInverter2Inactive_Cnt_lgc</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagStsInverter2Inactive</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/BoolStatusFlag_Cnt_lgc/Cnt_lgc</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
								<DATA-SEND-POINT>
									<SHORT-NAME>SEND_DiagNoofActiveInverter_Cnt_u08</SHORT-NAME>
									<DATA-ELEMENT-IREF>
										<P-PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DiagNoofActiveInverter</P-PORT-PROTOTYPE-REF>
										<DATA-ELEMENT-PROTOTYPE-REF DEST="DATA-ELEMENT-PROTOTYPE">/PortInterface/Count_Cnt_u08/Cnt_u08</DATA-ELEMENT-PROTOTYPE-REF>
									</DATA-ELEMENT-IREF>
								</DATA-SEND-POINT>
							</DATA-SEND-POINTS>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
<#	i = 0; 
	while(i < cpList.Count)
	{
		if ((cpList[i].Split('_')[0] == "DiagMgr") & (cpList[i].Split('_')[1] == "Per1"))
		{
#>							
							<SERVER-CALL-POINTS>
								<SYNCHRONOUS-SERVER-CALL-POINT>
									<SHORT-NAME>SC_<#=cpList[i]#>_CheckpointReached</SHORT-NAME>
									<OPERATION-IREFS>
										<OPERATION-IREF>
											<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/<#=cpList[i]#></R-PORT-PROTOTYPE-REF>
											<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/WdgM_CheckpointReached/CheckpointReached</OPERATION-PROTOTYPE-REF>
										</OPERATION-IREF>
									</OPERATION-IREFS>
									<TIMEOUT>0.000000000</TIMEOUT>
								</SYNCHRONOUS-SERVER-CALL-POINT>	
							</SERVER-CALL-POINTS>
<#		}
	i++;
	}
#>							
							<SYMBOL>DiagMgr_Per1</SYMBOL>
						</RUNNABLE-ENTITY>						
<#}
if(diagMgrDemIfApp == osApp){#>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_Init1</SHORT-NAME>
							<ADMIN-DATA>
								<SDGS>
									<SDG GID="edve:RunnableKind">
										<SD>InitRunnable</SD>
									</SDG>
								</SDGS>
							</ADMIN-DATA>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000</MINIMUM-START-INTERVAL>
							<SYMBOL>DiagMgr_Init1</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_Per2</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
							<SERVER-CALL-POINTS>
								<SYNCHRONOUS-SERVER-CALL-POINT>
									<SHORT-NAME>SC_DemIf_SetEventStatus</SHORT-NAME>
									<OPERATION-IREFS>
										<OPERATION-IREF>
											<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DemIf</R-PORT-PROTOTYPE-REF>
											<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/SetEventStatus</OPERATION-PROTOTYPE-REF>
										</OPERATION-IREF>
									</OPERATION-IREFS>
									<TIMEOUT>0.000000000</TIMEOUT>
								</SYNCHRONOUS-SERVER-CALL-POINT>
<#	i = 0; 
	while(i < cpList.Count)
	{
		if ((cpList[i].Split('_')[0] == "DiagMgr") & (cpList[i].Split('_')[1] == "Per2"))
		{
#>							
								<SYNCHRONOUS-SERVER-CALL-POINT>
									<SHORT-NAME>SC_<#=cpList[i]#>_CheckpointReached</SHORT-NAME>
									<OPERATION-IREFS>
										<OPERATION-IREF>
											<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/<#=cpList[i]#></R-PORT-PROTOTYPE-REF>
											<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/WdgM_CheckpointReached/CheckpointReached</OPERATION-PROTOTYPE-REF>
										</OPERATION-IREF>
									</OPERATION-IREFS>
									<TIMEOUT>0.000000000</TIMEOUT>
								</SYNCHRONOUS-SERVER-CALL-POINT>	
<#		}
	i++;
	}
#>	
							</SERVER-CALL-POINTS>
							<SYMBOL>DiagMgr_Per2</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_Trns1</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000000</MINIMUM-START-INTERVAL>
							<SERVER-CALL-POINTS>
								<SYNCHRONOUS-SERVER-CALL-POINT>
									<SHORT-NAME>SC_DemIf_RestartDem</SHORT-NAME>
									<OPERATION-IREFS>
										<OPERATION-IREF>
											<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DemIf</R-PORT-PROTOTYPE-REF>
											<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/RestartDem</OPERATION-PROTOTYPE-REF>
										</OPERATION-IREF>
									</OPERATION-IREFS>
									<TIMEOUT>0.000000000</TIMEOUT>
								</SYNCHRONOUS-SERVER-CALL-POINT>
								<SYNCHRONOUS-SERVER-CALL-POINT>
									<SHORT-NAME>SC_DemIf_SetOperationCycleState</SHORT-NAME>
									<OPERATION-IREFS>
										<OPERATION-IREF>
											<R-PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>/DemIf</R-PORT-PROTOTYPE-REF>
											<OPERATION-PROTOTYPE-REF DEST="OPERATION-PROTOTYPE">/PortInterface/DemIf/SetOperationCycleState</OPERATION-PROTOTYPE-REF>
										</OPERATION-IREF>
									</OPERATION-IREFS>
									<TIMEOUT>0.000000000</TIMEOUT>
								</SYNCHRONOUS-SERVER-CALL-POINT>
							</SERVER-CALL-POINTS>
							<SYMBOL>DiagMgr_Trns1</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_SCom_GetNTCInfo</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000</MINIMUM-START-INTERVAL>
							<SYMBOL>DiagMgr_SCom_GetNTCInfo</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_SCom_ReadStrgArray</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000</MINIMUM-START-INTERVAL>
							<SYMBOL>DiagMgr_SCom_ReadStrgArray</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_SCom_ResetNTCStatus</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000</MINIMUM-START-INTERVAL>
							<SYMBOL>DiagMgr_SCom_ResetNTCStatus</SYMBOL>
						</RUNNABLE-ENTITY>
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_SCom_ClearBlackBox</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000</MINIMUM-START-INTERVAL>
							<SYMBOL>DiagMgr_SCom_ClearBlackBox</SYMBOL>
						</RUNNABLE-ENTITY>								
						<RUNNABLE-ENTITY>
							<SHORT-NAME>DiagMgr_SCom_ClearLatchCounters</SHORT-NAME>
							<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
							<MINIMUM-START-INTERVAL>0.000000</MINIMUM-START-INTERVAL>
							<SYMBOL>DiagMgr_SCom_ClearLatchCounters</SYMBOL>
						</RUNNABLE-ENTITY>
<#}#>
					</RUNNABLES>
					<SUPPORTS-MULTIPLE-INSTANTIATION>false</SUPPORTS-MULTIPLE-INSTANTIATION>
				</INTERNAL-BEHAVIOR>
				<SWC-IMPLEMENTATION>
					<SHORT-NAME>DiagMgr<#=osAppSuffix#>_Implementation</SHORT-NAME>
					<CODE-DESCRIPTORS>
						<CODE>
							<SHORT-NAME>Code</SHORT-NAME>
							<TYPE>SRC</TYPE>
						</CODE>
					</CODE-DESCRIPTORS>
					<BEHAVIOR-REF DEST="INTERNAL-BEHAVIOR">/ComponentType/Ap_DiagMgr<#=osAppSuffix#>_InternalBehavior</BEHAVIOR-REF>
				</SWC-IMPLEMENTATION>
			</ELEMENTS>
		</AR-PACKAGE>
<#}#>
<# !ENDLOOP #>
		<AR-PACKAGE>
			<SHORT-NAME>Constant</SHORT-NAME>
			<ELEMENTS>
				<CONSTANT-SPECIFICATION>
					<SHORT-NAME>D_FALSE_CNT_LGC</SHORT-NAME>
					<VALUE>
						<BOOLEAN-LITERAL>
							<SHORT-NAME>D_FALSE_CNT_LGC</SHORT-NAME>
							<TYPE-TREF DEST="BOOLEAN-TYPE">/DataType/Boolean</TYPE-TREF>
							<VALUE>false</VALUE>
						</BOOLEAN-LITERAL>
					</VALUE>
				</CONSTANT-SPECIFICATION>
				<CONSTANT-SPECIFICATION>
					<SHORT-NAME>D_TWO_CNT_U08</SHORT-NAME>
					<VALUE>
						<INTEGER-LITERAL>
							<SHORT-NAME>D_TWO_CNT_U08</SHORT-NAME>
							<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt8</TYPE-TREF>
							<VALUE>2</VALUE>
						</INTEGER-LITERAL>
					</VALUE>
				</CONSTANT-SPECIFICATION>
				<CONSTANT-SPECIFICATION>
					<SHORT-NAME>D_MANUFMODEINIT_CNT_ENUM</SHORT-NAME>
					<VALUE>
						<INTEGER-LITERAL>
							<SHORT-NAME>D_MANUFMODEINIT_CNT_ENUM</SHORT-NAME>
							<TYPE-TREF DEST="INTEGER-TYPE">/DataType/ManufModeType</TYPE-TREF>
							<VALUE>0</VALUE>
						</INTEGER-LITERAL>
					</VALUE>
				</CONSTANT-SPECIFICATION>
				<CONSTANT-SPECIFICATION>
					<SHORT-NAME>D_ZERO_ULS_F32</SHORT-NAME>
					<VALUE>
						<REAL-LITERAL>
							<SHORT-NAME>D_ZERO_ULS_F32</SHORT-NAME>
							<TYPE-TREF DEST="REAL-TYPE">/DataType/Float</TYPE-TREF>
							<VALUE>0</VALUE>
						</REAL-LITERAL>
					</VALUE>
				</CONSTANT-SPECIFICATION>
				<CONSTANT-SPECIFICATION>
					<SHORT-NAME>D_ZERO_CNT_U16</SHORT-NAME>
					<VALUE>
						<REAL-LITERAL>
							<SHORT-NAME>D_ZERO_CNT_U16</SHORT-NAME>
							<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt16</TYPE-TREF>
							<VALUE>0</VALUE>
						</REAL-LITERAL>
					</VALUE>
				</CONSTANT-SPECIFICATION>
			</ELEMENTS>
		</AR-PACKAGE>
		<AR-PACKAGE>
			<SHORT-NAME>DataType</SHORT-NAME>
			<ELEMENTS>
				<BOOLEAN-TYPE>
					<SHORT-NAME>Boolean</SHORT-NAME>
					<DESC>
						<L-2 L="FOR-ALL">Boolean has the value space required to support the mathematical concept of 
binary-valued logic: {true, false}.</L-2>
					</DESC>
				</BOOLEAN-TYPE>
				<INTEGER-TYPE>
					<SHORT-NAME>UInt16</SHORT-NAME>
					<DESC>
						<L-2 L="FOR-ALL">UInt16 represents integers with a minimum value of 0 and a maximum value of 65535.
The order-relation on UInt16 is: x &lt; y if y - x is positive.
UInt16 has a lexical representation consisting of a finite-length sequence 
of decimal digits (#x30-#x39).

For example: 1, 0, 1267, +10000.</L-2>
					</DESC>
					<LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
					<UPPER-LIMIT INTERVAL-TYPE="CLOSED">65535</UPPER-LIMIT>
				</INTEGER-TYPE>
				<INTEGER-TYPE>
					<SHORT-NAME>ManufModeType</SHORT-NAME>
					<SW-DATA-DEF-PROPS>
						<COMPU-METHOD-REF DEST="COMPU-METHOD">/DataType/DataTypeSemantics/ManufModeType</COMPU-METHOD-REF>
					</SW-DATA-DEF-PROPS>
					<LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
					<UPPER-LIMIT INTERVAL-TYPE="CLOSED">2</UPPER-LIMIT>
				</INTEGER-TYPE>
				<INTEGER-TYPE>
					<SHORT-NAME>NTCNumber</SHORT-NAME>
					<LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
					<UPPER-LIMIT INTERVAL-TYPE="CLOSED">511</UPPER-LIMIT>
				</INTEGER-TYPE>
				<INTEGER-TYPE>
					<SHORT-NAME>NxtrDiagMgrStatus</SHORT-NAME>
					<SW-DATA-DEF-PROPS>
						<COMPU-METHOD-REF DEST="COMPU-METHOD">/DataType/DataTypeSemantics/NxtrDiagMgrStatus</COMPU-METHOD-REF>
					</SW-DATA-DEF-PROPS>
					<LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
					<UPPER-LIMIT INTERVAL-TYPE="CLOSED">255</UPPER-LIMIT>
				</INTEGER-TYPE>
				<INTEGER-TYPE>
					<SHORT-NAME>NxtrOpCycle</SHORT-NAME>
					<SW-DATA-DEF-PROPS>
						<COMPU-METHOD-REF DEST="COMPU-METHOD">/DataType/DataTypeSemantics/NxtrOpCycle</COMPU-METHOD-REF>
					</SW-DATA-DEF-PROPS>
					<LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
					<UPPER-LIMIT INTERVAL-TYPE="CLOSED">0</UPPER-LIMIT>
				</INTEGER-TYPE>
				<INTEGER-TYPE UUID="DCE:7dd6916e-bec7-43dd-bc4e-de29dedac161">
					<SHORT-NAME>NxtrOpCycleState</SHORT-NAME>
					<SW-DATA-DEF-PROPS>
						<COMPU-METHOD-REF DEST="COMPU-METHOD">/DataType/DataTypeSemantics/NxtrOpCycleState</COMPU-METHOD-REF>
					</SW-DATA-DEF-PROPS>
					<LOWER-LIMIT INTERVAL-TYPE="CLOSED">1</LOWER-LIMIT>
					<UPPER-LIMIT INTERVAL-TYPE="CLOSED">2</UPPER-LIMIT>
				</INTEGER-TYPE>
				<INTEGER-TYPE>
					<SHORT-NAME>UInt8</SHORT-NAME>
					<DESC>
						<L-2 L="FOR-ALL">UInt8 represents integers with a minimum value of 0 and a maximum value of 255.
The order-relation on UInt8 is: x &lt; y if y - x is positive.
UInt8 has a lexical representation consisting of a finite-length sequence 
of decimal digits (#x30-#x39).

For example: 1, 0, 126, +10.</L-2>
					</DESC>
					<LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
					<UPPER-LIMIT INTERVAL-TYPE="CLOSED">255</UPPER-LIMIT>
				</INTEGER-TYPE>
				<REAL-TYPE>
					<SHORT-NAME>Float</SHORT-NAME>
					<DESC>
						<L-2 L="FOR-ALL">Float corresponds to the IEEE single-precision 32-bit floating point type
[IEEE 754-1985]. The basic value space of float consists of the values 
m * 2^e, where m is an integer whose absolute value is less than 2^24, 
and e is an integer between -149 and 104, inclusive. In addition to the basic
value space described above, the value space of Float also contains the 
following special values: positive and negative zero, positive and negative 
infinity and not-a-number. The order-relation on Float is: 
x &lt; y if y - x is positive. Positive zero is greater than negative zero.
Not-a-number equals itself and is greater than all float values including positive infinity. 

Float values have a lexical representation consisting of a mantissa followed, 
optionally, by the character "E" or "e", followed by an exponent. The exponent
must be an integer. The mantissa must be a decimal number. The representations
for exponent and mantissa must follow the lexical rules for integer and decimal.
If the "E" or "e" and the following exponent are omitted, an exponent value 
of 0 is assumed. 

The special values positive and negative zero, positive and negative infinity
and not-a-number have lexical representations 0, -0, INF, -INF and NaN, 
respectively. 

For example, -1E4, 1267.43233E12, 12.78e-2, 12 and INF are all legal literals
for Float.</L-2>
					</DESC>
					<LOWER-LIMIT INTERVAL-TYPE="INFINITE"></LOWER-LIMIT>
					<UPPER-LIMIT INTERVAL-TYPE="INFINITE"></UPPER-LIMIT>
					<ALLOW-NAN>false</ALLOW-NAN>
					<ENCODING>SINGLE</ENCODING>
				</REAL-TYPE>				
			</ELEMENTS>
			<SUB-PACKAGES>
				<AR-PACKAGE>
					<SHORT-NAME>DataTypeSemantics</SHORT-NAME>
					<ELEMENTS>
						<COMPU-METHOD>
							<SHORT-NAME>ManufModeType</SHORT-NAME>
							<CATEGORY>TEXTTABLE</CATEGORY>
							<COMPU-INTERNAL-TO-PHYS>
								<COMPU-SCALES>
									<COMPU-SCALE>
										<LOWER-LIMIT>0</LOWER-LIMIT>
										<UPPER-LIMIT>0</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>ProductionMode</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
									<COMPU-SCALE>
										<LOWER-LIMIT>1</LOWER-LIMIT>
										<UPPER-LIMIT>1</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>ManufacturingMode</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
									<COMPU-SCALE>
										<LOWER-LIMIT>2</LOWER-LIMIT>
										<UPPER-LIMIT>2</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>EngineeringMode</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
								</COMPU-SCALES>
							</COMPU-INTERNAL-TO-PHYS>
						</COMPU-METHOD>
						<COMPU-METHOD>
							<SHORT-NAME>NxtrDiagMgrStatus</SHORT-NAME>
							<CATEGORY>TEXTTABLE</CATEGORY>
							<COMPU-INTERNAL-TO-PHYS>
								<COMPU-SCALES>
									<COMPU-SCALE>
										<LOWER-LIMIT>0</LOWER-LIMIT>
										<UPPER-LIMIT>0</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>NTC_STATUS_PASSED</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
									<COMPU-SCALE>
										<LOWER-LIMIT>1</LOWER-LIMIT>
										<UPPER-LIMIT>1</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>NTC_STATUS_FAILED</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
									<COMPU-SCALE>
										<LOWER-LIMIT>2</LOWER-LIMIT>
										<UPPER-LIMIT>2</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>NTC_STATUS_PREPASSED</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
									<COMPU-SCALE>
										<LOWER-LIMIT>3</LOWER-LIMIT>
										<UPPER-LIMIT>3</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>NTC_STATUS_PREFAILED</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
								</COMPU-SCALES>
							</COMPU-INTERNAL-TO-PHYS>
						</COMPU-METHOD>
						<COMPU-METHOD>
							<SHORT-NAME>NxtrOpCycle</SHORT-NAME>
							<CATEGORY>TEXTTABLE</CATEGORY>
							<COMPU-INTERNAL-TO-PHYS>
								<COMPU-SCALES>
									<COMPU-SCALE>
										<LOWER-LIMIT>0</LOWER-LIMIT>
										<UPPER-LIMIT>0</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>NxtrDefaultOpCycle</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
								</COMPU-SCALES>
							</COMPU-INTERNAL-TO-PHYS>
						</COMPU-METHOD>
						<COMPU-METHOD>
							<SHORT-NAME>NxtrOpCycleState</SHORT-NAME>
							<CATEGORY>TEXTTABLE</CATEGORY>
							<COMPU-INTERNAL-TO-PHYS>
								<COMPU-SCALES>
									<COMPU-SCALE>
										<LOWER-LIMIT>1</LOWER-LIMIT>
										<UPPER-LIMIT>1</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>NXTR_CYCLE_STATE_START</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
									<COMPU-SCALE>
										<LOWER-LIMIT>2</LOWER-LIMIT>
										<UPPER-LIMIT>2</UPPER-LIMIT>
										<COMPU-CONST>
											<VT>NXTR_CYCLE_STATE_END</VT>
										</COMPU-CONST>
									</COMPU-SCALE>
								</COMPU-SCALES>
							</COMPU-INTERNAL-TO-PHYS>
						</COMPU-METHOD>
					</ELEMENTS>
				</AR-PACKAGE>
			</SUB-PACKAGES>
		</AR-PACKAGE>
		<AR-PACKAGE>
			<SHORT-NAME>ModeDclrGroup</SHORT-NAME>
			<ELEMENTS>
				<MODE-DECLARATION-GROUP>
					<SHORT-NAME>StaMd_Mode</SHORT-NAME>
					<DESC>
						<L-2 L="FOR-ALL">EPS System State mode declaration</L-2>
					</DESC>
					<INITIAL-MODE-REF DEST="MODE-DECLARATION">/ModeDclrGroup/StaMd_Mode/WARMINIT</INITIAL-MODE-REF>
					<MODE-DECLARATIONS>
						<MODE-DECLARATION>
							<SHORT-NAME>DISABLE</SHORT-NAME>
						</MODE-DECLARATION>
						<MODE-DECLARATION>
							<SHORT-NAME>OFF</SHORT-NAME>
						</MODE-DECLARATION>
						<MODE-DECLARATION>
							<SHORT-NAME>OPERATE</SHORT-NAME>
						</MODE-DECLARATION>
						<MODE-DECLARATION>
							<SHORT-NAME>WARMINIT</SHORT-NAME>
						</MODE-DECLARATION>
					</MODE-DECLARATIONS>
				</MODE-DECLARATION-GROUP>
			</ELEMENTS>
		</AR-PACKAGE>		
		<AR-PACKAGE>
			<SHORT-NAME>PortInterface</SHORT-NAME>
			<ELEMENTS>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>DiagMgr_StaCtrl</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<OPERATIONS>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>Shutdown</SHORT-NAME>
						</OPERATION-PROTOTYPE>
					</OPERATIONS>
				</CLIENT-SERVER-INTERFACE>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>DemIf</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<OPERATIONS>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>DemShutdown</SHORT-NAME>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>RestartDem</SHORT-NAME>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>SetEventStatus</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>EventId</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt8</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>EventStatus</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NxtrDiagMgrStatus</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
							</ARGUMENTS>
							<POSSIBLE-ERROR-REFS>
								<POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/PortInterface/DemIf/E_NOT_OK</POSSIBLE-ERROR-REF>
							</POSSIBLE-ERROR-REFS>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>SetOperationCycleState</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NxtrOperationCycleId</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NxtrOpCycle</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NxtrCycleState</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NxtrOpCycleState</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
							</ARGUMENTS>
						</OPERATION-PROTOTYPE>
					</OPERATIONS>
					<POSSIBLE-ERRORS>
						<APPLICATION-ERROR>
							<SHORT-NAME>E_NOT_OK</SHORT-NAME>
							<ERROR-CODE>1</ERROR-CODE>
						</APPLICATION-ERROR>
					</POSSIBLE-ERRORS>
				</CLIENT-SERVER-INTERFACE>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>NxtrDiagMgr</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<OPERATIONS>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>GetNTCFailed</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NTC_Cnt_T_enum</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NTCNumber</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NTCFailed_Ptr_T_lgc</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="BOOLEAN-TYPE">/DataType/Boolean</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-PROTOTYPE>
							</ARGUMENTS>
							<POSSIBLE-ERROR-REFS>
								<POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/PortInterface/NxtrDiagMgr/E_NOT_OK</POSSIBLE-ERROR-REF>
							</POSSIBLE-ERROR-REFS>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>GetNTCActive</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NTC_Cnt_T_enum</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NTCNumber</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NTCActive_Ptr_T_lgc</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="BOOLEAN-TYPE">/DataType/Boolean</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-PROTOTYPE>
							</ARGUMENTS>
							<POSSIBLE-ERROR-REFS>
								<POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/PortInterface/NxtrDiagMgr/E_NOT_OK</POSSIBLE-ERROR-REF>
							</POSSIBLE-ERROR-REFS>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>GetNTCStatus</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NTC_Cnt_T_enum</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NTCNumber</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>Status_Ptr_T_u08</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt8</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-PROTOTYPE>
							</ARGUMENTS>
							<POSSIBLE-ERROR-REFS>
								<POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/PortInterface/NxtrDiagMgr/E_NOT_OK</POSSIBLE-ERROR-REF>
							</POSSIBLE-ERROR-REFS>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>SetNTCStatus</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NTC_Cnt_T_enum</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NTCNumber</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>Param_Cnt_T_u08</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt8</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>Status_Cnt_T_enum</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NxtrDiagMgrStatus</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
							</ARGUMENTS>
							<POSSIBLE-ERROR-REFS>
								<POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/PortInterface/NxtrDiagMgr/E_NOT_OK</POSSIBLE-ERROR-REF>
							</POSSIBLE-ERROR-REFS>
						</OPERATION-PROTOTYPE>
					</OPERATIONS>
					<POSSIBLE-ERRORS>
						<APPLICATION-ERROR>
							<SHORT-NAME>E_NOT_OK</SHORT-NAME>
							<ERROR-CODE>1</ERROR-CODE>
						</APPLICATION-ERROR>
					</POSSIBLE-ERRORS>
				</CLIENT-SERVER-INTERFACE>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>SCom_NxtrDiagMgr</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<OPERATIONS>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>GetNTCInfo</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>NTC_Cnt_T_enum</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/NTCNumber</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>Param_Ptr_T_u08</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt8</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>Status_Ptr_T_u08</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt8</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-PROTOTYPE>
								<ARGUMENT-PROTOTYPE>
									<SHORT-NAME>AgingCounter_Ptr_T_u08</SHORT-NAME>
									<SW-DATA-DEF-PROPS>
										<SW-CALIBRATION-ACCESS>NOT-ACCESSIBLE</SW-CALIBRATION-ACCESS>
									</SW-DATA-DEF-PROPS>
									<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt8</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-PROTOTYPE>
							</ARGUMENTS>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>ResetNTCStatus</SHORT-NAME>
							<ARGUMENTS>
							</ARGUMENTS>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>ReadStrgArray</SHORT-NAME>
							<ARGUMENTS>
							</ARGUMENTS>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>ClearBlackBox</SHORT-NAME>
							<ARGUMENTS>
							</ARGUMENTS>
						</OPERATION-PROTOTYPE>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>ClearLatchCounters</SHORT-NAME>
							<ARGUMENTS>
							</ARGUMENTS>
						</OPERATION-PROTOTYPE>
					</OPERATIONS>
				</CLIENT-SERVER-INTERFACE>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>WdgM_CheckpointReached</SHORT-NAME>
					<IS-SERVICE>true</IS-SERVICE>
					<OPERATIONS>
						<OPERATION-PROTOTYPE>
							<SHORT-NAME>CheckpointReached</SHORT-NAME>
							<DESC>
								<L-2 L="FOR-ALL">Indicates to the Watchdog Manager that a Checkpoint within a Supervised Entity has been reached.</L-2>
							</DESC>
							<POSSIBLE-ERROR-REFS>
								<POSSIBLE-ERROR-REF DEST="APPLICATION-ERROR">/PortInterface/WdgM_CheckpointReached/E_NOT_OK</POSSIBLE-ERROR-REF>
							</POSSIBLE-ERROR-REFS>
						</OPERATION-PROTOTYPE>
					</OPERATIONS>
					<POSSIBLE-ERRORS>
						<APPLICATION-ERROR>
							<SHORT-NAME>E_NOT_OK</SHORT-NAME>
							<ERROR-CODE>1</ERROR-CODE>
						</APPLICATION-ERROR>
					</POSSIBLE-ERRORS>
				</CLIENT-SERVER-INTERFACE>
<# if (isMtoProgram == true) { #>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>Pres_bar_f32</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>bar_f32</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="REAL-TYPE">/DataType/Float</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>Current_Amp_f32</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>Amp_f32</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="REAL-TYPE">/DataType/Float</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
<# } else { #>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>HwTrq_HwNm_f32</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>HwNm_f32</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="REAL-TYPE">/DataType/Float</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>MtrTrq_MtrNm_f32</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>MtrNm_f32</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="REAL-TYPE">/DataType/Float</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
<# } #>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>IgnCnt_Cnt_u16</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>Cnt_u16</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="INTEGER-TYPE">/DataType/UInt16</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>				
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>ManufModes_Cnt_enum</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>Cnt_enum</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="INTEGER-TYPE">/DataType/ManufModeType</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>RampRate_XpmS_f32</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>XpmS_f32</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="REAL-TYPE">/DataType/Float</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>SystemState</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS/>
					<MODE-GROUPS>
						<MODE-DECLARATION-GROUP-PROTOTYPE>
							<SHORT-NAME>Mode</SHORT-NAME>
							<TYPE-TREF DEST="MODE-DECLARATION-GROUP">/ModeDclrGroup/StaMd_Mode</TYPE-TREF>
						</MODE-DECLARATION-GROUP-PROTOTYPE>
					</MODE-GROUPS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>VehSpd_Kph_f32</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>Kph_f32</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="REAL-TYPE">/DataType/Float</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>BoolStatusFlag_Cnt_lgc</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>Cnt_lgc</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="BOOLEAN-TYPE">/DataType/Boolean</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>Count_Cnt_u08</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>Cnt_u08</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="BOOLEAN-TYPE">/DataType/UInt8</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>Enable_Cnt_lgc</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>Cnt_lgc</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="BOOLEAN-TYPE">/DataType/Boolean</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>UnityScalar_Uls_f32</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<DATA-ELEMENT-PROTOTYPE>
							<SHORT-NAME>Uls_f32</SHORT-NAME>
							<SW-DATA-DEF-PROPS>
								<SW-CALIBRATION-ACCESS>READ-ONLY</SW-CALIBRATION-ACCESS>
							</SW-DATA-DEF-PROPS>
							<TYPE-TREF DEST="REAL-TYPE">/DataType/Float</TYPE-TREF>
							<IS-QUEUED>false</IS-QUEUED>
						</DATA-ELEMENT-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>				
			</ELEMENTS>
		</AR-PACKAGE>
	</TOP-LEVEL-PACKAGES>
</AUTOSAR>
