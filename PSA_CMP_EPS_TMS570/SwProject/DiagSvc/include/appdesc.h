/* -----------------------------------------------------------------------------
  Filename:    appdesc.h
  Description: Interface towards the application used by CANdesc.
                
                Manufacturer: PSA
                EcuDocFile:   C:\git\Application\PSA_CMP_EPS_TMS570\Tools\AsrProject\Config\System\PSA_BMPV.cdd
                Variant:      CommonDiagnostics

  Generated by CANdelaGen, Mon Apr 09 15:25:55 2018
 
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2012 by Vctr Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vctr Informatik 
  GmbH.
  
  Vctr Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vctr Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(__APPDESC_H__)
#define __APPDESC_H__

/* -----------------------------------------------------------------------------
    &&&~ Configuration switches
 ----------------------------------------------------------------------------- */

#if !defined(__DESC_H__)
# error "Include sequence error! You must include desc.h before appDesc.h."
#endif


#include "DiagSvc.h"
#include "Nvm.h"


/* -----------------------------------------------------------------------------
    &&&~ Preprocessor constants (defines)
 ----------------------------------------------------------------------------- */

/* This magic number provides inter CANdesc generation process consistency check.All CANdesc files must have the same one. */
#define DESC_APPLICATION_INTERFACE_MAGIC_NUMBER                      13716


/* -----------------------------------------------------------------------------
    &&&~ Function prototypes
 ----------------------------------------------------------------------------- */
void AppDesc_Init1(void);
void AppDesc_Init2(void);
void AppDesc_Per1(void);
boolean TestFlashLogValidity(NvM_BlockIdType NvmBlock_Cnt_T_enum, FlashLogType_Str * FlashLogData_Cnt_T_str);

#if defined (DESC_ENABLE_DEBUG_USER ) || defined (DESC_ENABLE_DEBUG_INTERNAL)
/* Assertion function for better integration support. */
void DESC_API_CALLBACK_TYPE ApplDescFatalError(vuint8 errorCode, vuint16 lineNumber);
#endif

void DESC_API_CALLBACK_TYPE ApplDescOnTransitionSession(DescStateGroup newState, DescStateGroup formerState);
void DESC_API_CALLBACK_TYPE ApplDescOnTransitionSecurityAccess(DescStateGroup newState, DescStateGroup formerState);
void DESC_API_CALLBACK_TYPE ApplDescECUResetHardReset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescECUResetKeyOffOnReset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescECUResetSoftReset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescECUResetNxtrReset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescClearFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRead_Number_of_DTC_By_StatusMaskFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRead_by_MaskFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRead_DTC_Snapshot_Data_by_DTC_NumberFaultMemory(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescSecurityAccessRequestSeedVariantCoding(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescSecurityAccessSendKeyVariantCoding(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWrite_2101_Variant_Coding_Programmed(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteF080_Authentication_Zone(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteF08F_EMC_Standardization_Label(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteF0FE_Identification_Zone(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteF18B_ECUManufacturingDateDataIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteF18C_ECUSerialNumberDataIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD02_Serial_Communication_Service_Active_Defeats(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD12_Current_Mode_Offset_and_Gain(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD19_Nxtr_Manufacturing_Enable_Counter_MEC(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD1B_Manual_Vehicle_speed_Overide(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD1E_Torque_Sensor_Diagnostic_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD25_Motor_Torque_Scale_Factor(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD26_Average_Friction_Learning_Select(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD27_Friction_Offset_Output_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD29_Set_EOL_Friction_Learned(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFD30_End_of_Line_Torque_Trim_Value_Digital_SENT(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDA1_ECU_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDA2_EPS_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDA3_ECU_Hardware_Part_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDAC_Nxtr_Manufacturing_Scratchpad(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDAE_Ignition_Counter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDB0_IPM_Cogging_Table_1(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDB1_IPM_Cogging_Table_2(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDB2_IPM_Cogging_Table_3(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDB3_IPM_Cogging_Table_4(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDB4_Current_Mode_Analog_Ke_R_Ld_Lq(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDB5_Active_Pull_Set_Short_Term_Comp(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDB6_Active_Pull_Set_LongTerm_Comp(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDB7_IPM_Cogging_Table_5(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFDBA_End_of_Line_Polarity(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFEFC_Powerpack_Configuration(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescWriteFEFF_Application_Key(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReturnControlFD0D_Motor_Torque_Command_I_O_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescSetFD0D_Motor_Torque_Command_I_O_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReturnControlFD11_Assist_Gain_Command_I_O_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescSetFD11_Assist_Gain_Command_I_O_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartDF00_Permanent_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartDF01_Temporary_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartF000_Manufacturing_Variables_Reset(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartF001_Clear_Diagnostic_Trouble_Code_NTC_CTC(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartF003_Position_Sensor_EOLCalibration(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartF004_Torque_Sensor_End_Of_Line_Calibration_Digital(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartF005_DTC_Status_By_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartF008_Current_Mode_Current_Gain_Calc(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartF009_Current_Mode_Current_Offset_Calc(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStartF0FF_MPU_Test_Interface(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStopDF00_Permanent_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStopDF01_Temporary_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescStopF009_Current_Mode_Current_Offset_Calc(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescResultsDF00_Permanent_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescResultsDF01_Temporary_Control(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescResultsF009_Current_Mode_Current_Offset_Calc(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescPostECUResetHardReset(vuint8 status);
void DESC_API_CALLBACK_TYPE ApplDescPostECUResetKeyOffOnReset(vuint8 status);
void DESC_API_CALLBACK_TYPE ApplDescPostECUResetSoftReset(vuint8 status);
void DESC_API_CALLBACK_TYPE ApplDescPostClearFaultMemory(vuint8 status);
/* Application condition checks */
void DESC_API_CALLBACK_TYPE ApplDescCheckCommCtrl(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescOemCommControlInfo *commControlInfo);

#if defined (DESC_ENABLE_COMM_CTRL_SUBNET_SUPPORT)
void DESC_API_CALLBACK_TYPE ApplDescSetCommMode(DescOemCommControlInfo *commControlInfo);
#endif

#if defined (DESC_ENABLE_RX_COMM_CONTROL)
void DESC_API_CALLBACK_TYPE ApplDescSetCommModeOnRxPath(DescOemCommControlInfo *commControlInfo);
#endif

/* Notification functions */
void DESC_API_CALLBACK_TYPE ApplDescOnCommunicationDisable(void);
void DESC_API_CALLBACK_TYPE ApplDescOnCommunicationEnable(void);

void DESC_API_CALLBACK_TYPE ApplDescCheckSessionTransition(DescStateGroup newState, DescStateGroup formerState);
void DESC_API_CALLBACK_TYPE ApplDescRead_0D01_Size_ECUSerialNumberDataIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRead_2100_Variant_Coding_Possibilities(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescRead_2101_Variant_Coding_Programmed(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadC002_Size_for_Multi(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD403_Vehicle_Speed(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD404_Battery_Voltage(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD405_ECU_Temperature(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD407_Engine_State(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD408_Ignition_On_Off(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD409_Assist_State(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD40A_Assist_Mode(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD40C_State_Mode(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD40D_Absolute_Handwheel_Angle(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD40E_Handwheel_Angle(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD40F_Handwheel_Torque(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD410_Final_Torque_Command(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD412_Derating_Flag(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD413_DMD_FCT_CPK(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD414_CAUSE_DESACTIV_CPK(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD415_ETAT_DAE_CPK(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD417_Steering_Wheel_Angle_Setpoint(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD418_Handwheel_Velocity(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD419_LKA_Function_Request(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD41A_LXA_Trajectory_Correction_Factor(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD41B_EPS_State_LXA(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadD41C_Active_Tuning_Set(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadF080_Authentication_Zone(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadF08A_Multiplexed_CAN_HS_Network_Diagnostic(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadF08F_EMC_Standardization_Label(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadF0FE_Identification_Zone(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadF180_bootSoftwareIdentification(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadF186_ActiveDiagnosticSessionControl(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadF18B_ECUManufacturingDateDataIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadF18C_ECUSerialNumberDataIdentifier(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD01_Internal_Software_Identifiers(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD02_Serial_Communication_Service_Active_Defeats(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD0E_Motor_Stiffness_Check(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD10_Nxtr_CCP_XCP_Transmit_and_Receive_IDs(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD12_Current_Mode_Offset_and_Gain(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD13_Read_Nxtr_DTCs(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD17_Flash_Memory_Size(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD19_Nxtr_Manufacturing_Enable_Counter_MEC(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD1A_System_state(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD1B_Manual_Vehicle_speed_Overide(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD1C_Manufacturing_Services_Version(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD1E_Torque_Sensor_Diagnostic_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD20_Read_Transient_Overvoltage_Data(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD25_Motor_Torque_Scale_Factor(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD26_Average_Friction_Learning_Select(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD27_Friction_Offset_Output_Defeat(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD29_Set_EOL_Friction_Learned(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD30_End_of_Line_Torque_Trim_Value_Digital_SENT(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFD31_Torque_Sensor_Value_Digital_SENT(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDA1_ECU_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDA2_EPS_Serial_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDA3_ECU_Hardware_Part_Number(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDAC_Nxtr_Manufacturing_Scratchpad(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDAD_Active_Pull_Compensation(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDAE_Ignition_Counter(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDAF_NTC_Snapshot_Data(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDB0_IPM_Cogging_Table_1(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDB1_IPM_Cogging_Table_2(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDB2_IPM_Cogging_Table_3(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDB3_IPM_Cogging_Table_4(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDB4_Current_Mode_Analog_Ke_R_Ld_Lq(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDB5_Active_Pull_Set_Short_Term_Comp(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDB6_Active_Pull_Set_LongTerm_Comp(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDB7_IPM_Cogging_Table_5(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFDBA_End_of_Line_Polarity(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFEFC_Powerpack_Configuration(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFEFD_Vehicle_Speed_Type(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFEFE_Nxtr_Flash_Bootloader_Identification(DescMsgContext* pMsgContext);
void DESC_API_CALLBACK_TYPE ApplDescReadFEFF_Application_Key(DescMsgContext* pMsgContext);
#if defined (DESC_ENABLE_MULTI_CFG_SUPPORT)
/* Additionaly reject a supported PID (multi ECU configuration) */
DescBool ApplDescIsDataIdSupported(vuint16 pid);
#endif



#endif /* __APPDESC_H__ */
