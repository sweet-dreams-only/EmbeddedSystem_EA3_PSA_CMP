<#@ AutosarXml processor="ArDirectiveProcessor" requires="arPrefix='ar';arNamespace='http://autosar.org/2.1.2'" #>
<#@ template inherits="AutosarDirectiveProcessor.ArGtcBase" debug="false" #>
<#@ output extension="" #>
<#@ include file="Helper.tt" #>
/*****************************************************************************
* Copyright 2010 Nxtr Automotive, All Rights Reserved.
* Nxtr Confidential
*
* Module File Name  : uDiag_Cfg.h
* Module Description: Configuration file of uDiag module
* Product           : Gen II Plus - EA3.0
* Generator         : <#= GeneratorName #> <#= GeneratorVersion #>
* Generation Time   : <#= DateTime.Now.ToString( "dd.MM.yyyy HH:mm:ss" ) #>
*****************************************************************************/
/* Version Control:
 * Date Created:      Fri Jul 13 18:34:17 2012
 * %version:          10 %
 * %date_modified:    Wed Jan  8 14:44:11 2014 %
 *---------------------------------------------------------------------------------------------------------------------
 * Date      Rev      Author         Change Description                                                        SCR #
 * -------   -------  --------  ---------------------------------------------------------------------------  ----------
 * 09/17/12   1       JJW       Initial template creation
 * 09/25/12   2       JJW       Added VIM Table name configuration
 * 10/04/12   4       JJW       Added support for link-time register value determination
 * 11/29/12   7       JJW       Added support for Wdg configuration
 * 06/26/13   8       KMC       Added D_ENABLEFPUDIAG_CNT_LGC for enable/disable of FPU exception handling      7139
 * 10/10/13   9       KMC       Added BC_UDIAG_GLADIATORCOMPATIBLE for ESM group 1 channel 7 vs group 1        10404
 *                              channel 34 NHET2 parity error  
 *                              Added BC_UDIAG_UDIAGVIMPERTRUSTED for trusted function from uDiagVIM_Per       10408
 * 01/08/14   10      KMC       Added BC_UDIAG_UDIAGECCPERTRUSTED for trusted function from uDiagECC_Per       11176
 */

#ifndef UDIAG_CFG_H
#define UDIAG_CFG_H
<# ChangeContext( Xp.ModuleConfAtDefRefTo( "uDiag" ) ); 
	Dictionary<string, bool> CPEnableDic = new Dictionary<string, bool>();
	/* Initialize the Dictionary with all available Checkpoints set to disabled */
	CPEnableDic.Add( "uDiagLossOfExec_Per2_CP0", false);
	CPEnableDic.Add( "uDiagLossOfExec_Per2_CP1", false);
	CPEnableDic.Add( "uDiagLossOfExec_Per3_CP0", false);
	CPEnableDic.Add( "uDiagLossOfExec_Per3_CP1", false);
	CPEnableDic.Add( "uDiagStaticRegs_Per_CP0", false);
	CPEnableDic.Add( "uDiagStaticRegs_Per_CP1", false);
	CPEnableDic.Add( "uDiagVIM_Per_CP0", false);
	CPEnableDic.Add( "uDiagVIM_Per_CP1", false);
	CPEnableDic.Add( "uDiagECC_Per_CP0", false);
	CPEnableDic.Add( "uDiagECC_Per_CP1", false);
	
#>


/*******************************************************************************
**                      Include Section                                       **
*******************************************************************************/

/*** Public Part (used by uDiag API) *****************************************/
#include "Std_Types.h"                   /* Standard type definitions      */


<# !LOOP( Xp.ValueAtDefRefTo( "uDiagGeneral/uDiagCPEnable" ) ) #>
/* <#=ValueOf( "." )#> Checkpoint is enabled */
<#CPEnableDic[ValueOf( "." )] = true;#>
<# !ENDLOOP #>

/* Disable all checkpoints that are not enabled */
<# foreach ( KeyValuePair<string, bool> cp in CPEnableDic) {
	 if(false == cp.Value) { #>
#define Rte_Call_<#=cp.Key#>_CheckpointReached()		(void)0 /* Checkpoint disabled */	 
<# } 
} #>

/*** Private Part (used by internal uDiag files only) *************************************/
#ifdef UDIAG_C

<# if("TTTech_v2.0.3" == ValueOf(Xp.ValueAtDefRefTo( "uDiagGeneral/WdgMVersion" ))) { 
ChangeContext( Xp.ModuleConfAtDefRefTo( "WdgM" ) ); 
#>
#define BC_WDGM_TTTECH_V2_0_3				STD_ON
#define BC_WDGM_NONE						STD_OFF
#define D_NUMOFSUPERVISEDENTITIES_CNT_U08	<#= Count( Xp.ContainerAtDefRefTo( "WdgMSupervisedEntity" ))#>u

<# ChangeContext( Xp.ModuleConfAtDefRefTo( "uDiag" ) ); 

}else{ #>
#define BC_WDGM_NONE						STD_ON
#define BC_WDGM_TTTECH_V2_0_3				STD_OFF

<# } #>
#define D_NUMOFTESTEDREGS_CNT_U16	<#= Count( Xp.ContainerAtDefRefTo( "uDiagRegCheck" )) + Count( Xp.ContainerAtDefRefTo( "uDiagRegCheckLnk" )) #>u

/* Enable Floating Point Exception Diagnostic. */
#define D_ENABLEFPUDIAG_CNT_LGC			<#= ValueOf(Xp.ValueAtDefRefTo( "uDiagGeneral/uDiagEnableFPUDiag" ))#>

/* Select ESM Channel 7 vs Channel 34 for NHET2 RAM Parity error. */
#define BC_UDIAG_GLADIATORCOMPATIBLE		<#= ValueOf(Xp.ValueAtDefRefTo( "uDiagGeneral/uDiagGladiatorCompatible" ))#>

/* Frequency of the VCLK in kHz. */
#define D_VCLKFREQ_KHZ_U32			<#= ValueOf(Xp.ValueAtDefRefTo( "uDiagGeneral/uDiagVCLK_kHz" )) #>U

/* Name of the VIM initialization table in Flash */
#define D_VIMTABLENAME_CNT_U32		<#= ValueOf(Xp.ValueAtDefRefTo( "uDiagGeneral/uDiagVimTableName" )) #>

/* uDiag Register Verification Configuration Definitions */
typedef struct {
	VAR(uint32, AUTOMATIC) 	Address;						/* The first element is the register pointer */
	VAR(uint32, AUTOMATIC) 	Value;							/* The second element is a 32-bit value */
}uDiag_RegChkType;

extern CONST(uDiag_RegChkType, AUTOMATIC) StaticRegTable_Cnt_M_str[ D_NUMOFTESTEDREGS_CNT_U16 ];


#endif /* UDIAG_C                                                            */


/*******************************************************************************
**                      Global Macros                                         **
*******************************************************************************/

/*** Public Part (uDiag API) *****************************************/

/*
 * File version information
 */
#define UDIAG_CFG_H_MAJOR_VERSION   1u
#define UDIAG_CFG_H_MINOR_VERSION   0u
#define UDIAG_CFG_H_PATCH_VERSION   0u

/*
 * API enable settings
 */
 
/* uDiagVIM_Per is in a trusted task. */
#define BC_UDIAG_UDIAGVIMPERTRUSTED			<#= ValueOf(Xp.ValueAtDefRefTo( "uDiagGeneral/uDiagVIMPerTrusted" ))#>

/* uDiagECC_Per is in a trusted task. */
#define BC_UDIAG_UDIAGECCPERTRUSTED			<#= ValueOf(Xp.ValueAtDefRefTo( "uDiagGeneral/uDiagECCPerTrusted" ))#>


   
#endif /* UDIAG_CFG_H */

/*** End of file **************************************************************/
