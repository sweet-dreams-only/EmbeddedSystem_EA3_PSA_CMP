<#@ AutosarXml processor="ArDirectiveProcessor" requires="arPrefix='ar';arNamespace='http://autosar.org/2.1.2'" #>
<#@ template inherits="AutosarDirectiveProcessor.ArGtcBase" debug="false" #>
<#@ output extension="" #>
<#@ include file="Helper.tt" #>
/*****************************************************************************
* Copyright 2010 Nxtr Automotive, All Rights Reserved.
* Nxtr Confidential
*
* Module File Name  : Ap_BVDiag_Cfg.h
* Module Description: Configuration file of DiagMgr module
* Product           : Gen II Plus - EA3.0
* Generator         : <#= GeneratorName #> <#= GeneratorVersion #>
* Generation Time   : <#= DateTime.Now.ToString( "dd.MM.yyyy HH:mm:ss" ) #>
*****************************************************************************/
/* Version Control:
 * Date Created:      Fri Jul 13 18:34:17 2012
 * %version:          3 %
 * %date_modified:    Thu Nov 14 12:12:39 2013 %
 *---------------------------------------------------------------------------------------------------------------------
 * Date      Rev      Author         Change Description                                                        SCR #
 * -------   -------  --------  ---------------------------------------------------------------------------  ----------
 * 09/20/12   1       ssk       Initial template creation
 * 09/16/13	  2       NRAR      Added Cfg constant to enable NTC B1 as per customer requirement                8712
 * 11/14/13   3       Jared     Added config constant to enable using ElPw input for SrlCom to conditionally
 *                              set NTC B1 for some programs.                                                  9935
 */

#ifndef AP_BVDIAG_CFG_H
#define AP_BVDIAG_CFG_H


/*******************************************************************************
**                      Define Section                                       **
*******************************************************************************/

<# ChangeContext( Xp.ModuleConfAtDefRefTo( "BVDiag" ) );
	Dictionary<string, bool> CPEnableDic = new Dictionary<string, bool>();
	/* Initialize the Dictionary with all available Checkpoints set to disabled */
	CPEnableDic.Add( "BVDiag_Per1_CP0", false);
	CPEnableDic.Add( "BVDiag_Per1_CP1", false);


#>
<# !LOOP( Xp.ValueAtDefRefTo( "BVDiagGeneral/BVDiagCPEnable" ) ) #>
/* <#=ValueOf( "." )#> Checkpoint is enabled */
<#CPEnableDic[ValueOf( "." )] = true;#>
<# !ENDLOOP #>

/* Disable all checkpoints that are not enabled */
<# foreach ( KeyValuePair<string, bool> cp in CPEnableDic) {
	 if(false == cp.Value) { #>
#define Rte_Call_<#=cp.Key#>_CheckpointReached()		(void)0 /* Checkpoint disabled */
<# }
} #>

<# string config_BVDiag = ValueOf( Xp.ValueAtDefRefTo( "BVDiagGeneral/BC_B1_BATTVOLTDIAG" ) ); #>
<# string config_BVDiag_ElPw = ValueOf( Xp.ValueAtDefRefTo( "BVDiagGeneral/BC_B1_BATTVOLTDIAG_ELPW" ) ); #>

#define BC_B1_BATTVOLTDIAG <#=config_BVDiag#>   /* Configure this constant to ON or OFF based on customer requirements */
#define BC_B1_BATTVOLTDIAG_ELPW <#=config_BVDiag_ElPw#>   /* Configure this constant to ON or OFF based on customer requirements */

#endif /* BVDIAG_CFG_H */

/*** End of file **************************************************************/
